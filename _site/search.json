[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS624",
    "section": "",
    "text": "Welcome to ISSS624 Geospatial Analytics Applications, by 1Darren!\nIn this website, I am going to share with you my learning journey of Geospatial Analytics (under instruction from Prof Kam).\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex01.html",
    "href": "Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: Geospatial Dara Wrangling with R",
    "section": "",
    "text": "In this hands-on exercise, I learn how to import and wrangle geospatial data using appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex01.html#overview",
    "href": "Hands-on_Ex01.html#overview",
    "title": "Hands-on Exercise 1: Geospatial Dara Wrangling with R",
    "section": "",
    "text": "In this hands-on exercise, I learn how to import and wrangle geospatial data using appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1: Geospatial Dara Wrangling with R",
    "section": "Getting Started",
    "text": "Getting Started\nThis is the getting started paragraph."
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "On this page, I address Hands-On Exercise for Chapter 01 - Geospatial Data Wrangling and Chloropleth Mapping"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#overview",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#overview",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "In this hands-on exercise, I learn how to import and wrangle geospatial data using appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.3 Getting Started",
    "text": "1.3 Getting Started\nThe code chunk below installs and loads sf and tidyverse packages into R environment:\n\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#importing-geospatial-data",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#importing-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.4 Importing Geospatial Data",
    "text": "1.4 Importing Geospatial Data\n\n1.4.1 Importing polygon feature data [MPSZ]\n\nst_read: reads simple features from structured table (?)\n\ndsn: Data Source Name, specific data source folder\nlayer: points to filename; R figures out which layer to read\n\nSVY21 - specific map projection, focused on Singapore\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\1darren\\ISSS624\\Hands-on_Ex01\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n1.4.2 Importing polygon feature data in shapefile form – Cyclingpath\n\ncyclingpath &lt;- st_read(dsn = \"data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\1darren\\ISSS624\\Hands-on_Ex01\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n\n1.4.3 Importing GIS data in kml format\n\nFor kml file, we need to specify specific path + filename + extension, unlike other\n\n\npreschool = st_read(\"data/geospatial/pre-schools-location-kml.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\1darren\\ISSS624\\Hands-on_Ex01\\data\\geospatial\\pre-schools-location-kml.kml' \n  using driver `KML'\nSimple feature collection with 1359 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "",
    "text": "This function calls pacman to load sf, tidyverse, tmap packages; - tmap : For thematic mapping - sf : for geospatial data handling - tidyverse : for non-spatial data handling\n\npacman::p_load(tmap, sf, tidyverse)\n\n\n\n\n\n\n\nAdditional Notes\n\n\n\n\n\n\nIn the ‘old days’, the library-import would have been written thus:\n\nlibrary(tmap)\nlibrary(sf)\nlibrary(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#notes",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#notes",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "",
    "text": "7 columns;\ntime_per_hour: hour of travel\norigin_pt_code, destination_pt_code: per bus-trip; change-bus counted as 2 trips\ntotal_trips: number of passengers moving between startpoint/endpoint, during that hour\nIssue: no explicit location, only bus stop code; can we reconcile bus-stop-code with geospatial data?\nyes:"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "href": "In-class_Ex/In-class_Ex1/data/geospatial/MPSZ-2019.html",
    "title": "ISSS624",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#getting-started",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#getting-started",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "",
    "text": "Show the code\npacman::p_load(sf, tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#preparing-the-flow-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#preparing-the-flow-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Preparing the Flow Data",
    "text": "Preparing the Flow Data\n\nImporting the Origin/Destination (O/D) Data\nFirstly, we will import the Passenger volume by Origin/Destination Bus Stops dataset downloaded by LTA Datamall by using read_csv() of readr package.\n\n\nShow the code\nodbus &lt;- read_csv(\"data/aspatial/origin_destination_bus_202308.csv\")\n\n\n\n\n\n\n\n\nLearneR notes\n\n\n\n\n\n\nNB: Here, we use relative paths, which is helpful for Rstudio, HTML rendering etc\n\nThis works because current file (“In-class_Ex1.qmd”) is in the same subdirectory level as /data file\nIn the “Olde Style”, we would specify data directories\n\nIn “Environment” window, clicking white triangle beside ODBUS gives an .info() of the odbus dataframe; easier than using str (structure) command\n\nCan also open folder in R to review for quick inspection;\nRemember to close after use to avoid\n\n\n\n\n\n\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\n\n\n\n\n\n\n\nLearneR notes\n\n\n\n\n\n\nCommand changes two columns into factor datatype; categorical variable stored as integer\n\n\n\n\n\norigtrip_7_9 &lt;- odbus %&gt;% \n  filter(DAY_TYPE == \"WEEKDAY\")  %&gt;% \n  filter(TIME_PER_HOUR &gt;= 7 & TIME_PER_HOUR &lt;= 9)  %&gt;% \n  group_by(ORIGIN_PT_CODE)  %&gt;% \n  summarise(TRIPS = sum(TOTAL_TRIPS))\norigtrip_7_9\n\n# A tibble: 5,015 × 2\n   ORIGIN_PT_CODE TRIPS\n   &lt;fct&gt;          &lt;dbl&gt;\n 1 01012           1617\n 2 01013            813\n 3 01019           1620\n 4 01029           2383\n 5 01039           2727\n 6 01059           1415\n 7 01109            115\n 8 01112           7675\n 9 01113           8074\n10 01119           3913\n# ℹ 5,005 more rows\n\n\n\n\n\n\n\n\nLearneR notes\n\n\n\n\n\n\n%&gt;% Pipe function; chains together several operations in sequence to allow for multi-filter\n\nCode filters from odbus to …\n\n\nFilter by WEEKDAY\nTIME_PER_HOUR between 7 to 9 inclusive (eg 0700 to 0959)\nCreates a table, grouped by ORIGIN_PT_CODE…\n…with a fourth summary column, TRIPS, created as a sum of TOTAL_TRIPS"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-the-od-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-the-od-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Importing the OD Data",
    "text": "Importing the OD Data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#extracting-the-study-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#extracting-the-study-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Extracting the Study Data",
    "text": "Extracting the Study Data\n\nbusstop &lt;- st_read(dsn = \"data/geospatial\", \n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `BusStop' from data source \n  `C:\\1darren\\ISSS624\\In-class_Ex\\In-class_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 5161 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48284.56 ymax: 52983.82\nProjected CRS: SVY21\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\1darren\\ISSS624\\In-class_Ex\\In-class_Ex1\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nBUSSTOP$GEOMETRY: Binary Large Object Field; defines coordinate for each bus-stop\n\nTypical cell of dataframe is either INT or CHAR\nBLOF allows to store a list; POINT(lat, long)\n\nMPSZ$GEOMETRYis instead a multipolygon; a list of 300 x 2 coordinates\nIMPORTANT: There are two different coordinates system;\n\nMost GML, KML, data.gov are in wgs84, decimal degree data format\nWe should change to svy21\nCRS: coordinate system of Singapore; cahnge to metres\n\nNow we can join odbus (bus stop code) and busstop (coordinates) and also master plan subzone (mpsz) ## Working with Geospatial Data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#working-with-geospatial-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#working-with-geospatial-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Working with Geospatial Data",
    "text": "Working with Geospatial Data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-geospatial-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-geospatial-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Importing Geospatial Data",
    "text": "Importing Geospatial Data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#geospatial-data-wrangling",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#geospatial-data-wrangling",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#combining-bus-stop-mpsz",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#combining-bus-stop-mpsz",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Combining Bus Stop & MPSZ",
    "text": "Combining Bus Stop & MPSZ"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#visualizing-the-geospatial-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#visualizing-the-geospatial-data",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Visualizing the Geospatial Data",
    "text": "Visualizing the Geospatial Data"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#viewing-the-subzone-spatial-file",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#viewing-the-subzone-spatial-file",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Viewing the Subzone Spatial File",
    "text": "Viewing the Subzone Spatial File"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#personal-notes",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#personal-notes",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "Personal Notes",
    "text": "Personal Notes\n\nODBus Structure\n\n7 columns;\ntime_per_hour: hour of travel\norigin_pt_code, destination_pt_code: per bus-trip; change-bus counted as 2 trips\ntotal_trips: number of passengers moving between startpoint/endpoint, during that hour\nIssue: no explicit location, only bus stop code; can we reconcile bus-stop-code with geospatial data?\nyes:"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#getting-started---import-packages",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#getting-started---import-packages",
    "title": "In-class Exercise 1: My First Date with Geospatial Data Analytics",
    "section": "",
    "text": "This function calls pacman to load sf, tidyverse, tmap packages; - tmap : For thematic mapping - sf : for geospatial data handling - tidyverse : for non-spatial data handling\n\npacman::p_load(tmap, sf, tidyverse)\n\n\n\n\n\n\n\nAdditional Notes\n\n\n\n\n\n\nIn the ‘old days’, the library-import would have been written thus:\n\nlibrary(tmap)\nlibrary(sf)\nlibrary(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#outcomes",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#outcomes",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.1 Outcomes:",
    "text": "1.1 Outcomes:\nIn this hands-on exercise, I learn how to import and wrangle geospatial data using appropriate R packages."
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#data-structure",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#data-structure",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.2 Data Structure:",
    "text": "1.2 Data Structure:\nFiles loaded into /data file as per below:\n\n1.2.1 Geospatial Data Sets\n/data/geospatial/\n\nMaster Plan Subzone Boundary 2014 data\nCycling Path locations from LTA DataMall\nPreschool locations from data.gov.sg\n\n\n\n\n1.2.2 Aspatial Data Sets\n/data/aspatial/\n\nAirBnb listings for Singapore"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#st_geometry-glimpse-head",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#st_geometry-glimpse-head",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.5 st_geometry(); glimpse(); head()",
    "text": "1.5 st_geometry(); glimpse(); head()\n\nGeometries are stored in an sf dataframe; the column that contains them is an sfc class. We can preview the top few geometries:\n\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\nglimpse is the preview function to peek at top few rows/features\n\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\nView top n rows of dataframe, similar to pandas head()\n\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#plot",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#plot",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.6 plot()",
    "text": "1.6 plot()\n\nplot()plot(st_geometry())plot() specific attribute\n\n\n\nplots geospatial features of MPSZ, forcing all 15 instead of first 9\n\n\nplot(mpsz, max.plot=15)\n\n\n\n\n\n\n\nonly plots sfc object; see Section\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#section",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#section",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.10",
    "text": "1.10\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#projection-transformation-changing-epsg-code",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#projection-transformation-changing-epsg-code",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.7 Projection Transformation: Changing EPSG Code",
    "text": "1.7 Projection Transformation: Changing EPSG Code\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\npreschool3414 &lt;- st_transform(preschool, crs=3414)\n\nst_crs(preschool3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n1.8\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 4252 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood_group, neighbourhood, room_type\ndbl  (10): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist(listings)\n\n[[1]]\n# A tibble: 4,252 × 16\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  50646 Pleasant…  227796 Sujatha   Central Region      Bukit Timah       1.33\n 2  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 3  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 4  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 5 275343 Convenie… 1439258 Joyce     Central Region      Bukit Merah       1.29\n 6 275344 15 mins … 1439258 Joyce     Central Region      Bukit Merah       1.29\n 7 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 8 301247 Nice roo… 1552002 Rahul     Central Region      Geylang           1.32\n 9 324945 20 Mins … 1439258 Joyce     Central Region      Bukit Merah       1.29\n10 330089 Accomo@ … 1439258 Joyce     Central Region      Bukit Merah       1.29\n# ℹ 4,242 more rows\n# ℹ 9 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;\n\n\n\nglimpse(listings)\n\nRows: 4,252\nColumns: 16\n$ id                             &lt;dbl&gt; 50646, 71609, 71896, 71903, 275343, 275…\n$ name                           &lt;chr&gt; \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        &lt;dbl&gt; 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      &lt;chr&gt; \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            &lt;chr&gt; \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  &lt;chr&gt; \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ latitude                       &lt;dbl&gt; 1.33432, 1.34537, 1.34754, 1.34531, 1.2…\n$ longitude                      &lt;dbl&gt; 103.7852, 103.9589, 103.9596, 103.9610,…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 80, 178, 81, 81, 52, 40, 72, 41, 49, 49…\n$ minimum_nights                 &lt;dbl&gt; 90, 90, 90, 90, 14, 14, 90, 8, 14, 14, …\n$ number_of_reviews              &lt;dbl&gt; 18, 20, 24, 48, 20, 13, 133, 105, 14, 1…\n$ last_review                    &lt;date&gt; 2014-07-08, 2019-12-28, 2014-12-10, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.22, 0.28, 0.33, 0.67, 0.20, 0.16, 1.2…\n$ calculated_host_listings_count &lt;dbl&gt; 1, 4, 4, 4, 50, 50, 7, 1, 50, 50, 50, 4…\n$ availability_365               &lt;dbl&gt; 365, 365, 365, 365, 353, 364, 365, 90, …\n\n\n\nlistings_sf &lt;- st_as_sf(listings, coords = c(\"longitude\", \"latitude\"), crs=4326) %&gt;%\nst_transform(crs = 3414)\nglimpse(listings_sf)\n\nRows: 4,252\nColumns: 15\n$ id                             &lt;dbl&gt; 50646, 71609, 71896, 71903, 275343, 275…\n$ name                           &lt;chr&gt; \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        &lt;dbl&gt; 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      &lt;chr&gt; \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            &lt;chr&gt; \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  &lt;chr&gt; \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 80, 178, 81, 81, 52, 40, 72, 41, 49, 49…\n$ minimum_nights                 &lt;dbl&gt; 90, 90, 90, 90, 14, 14, 90, 8, 14, 14, …\n$ number_of_reviews              &lt;dbl&gt; 18, 20, 24, 48, 20, 13, 133, 105, 14, 1…\n$ last_review                    &lt;date&gt; 2014-07-08, 2019-12-28, 2014-12-10, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.22, 0.28, 0.33, 0.67, 0.20, 0.16, 1.2…\n$ calculated_host_listings_count &lt;dbl&gt; 1, 4, 4, 4, 50, 50, 7, 1, 50, 50, 50, 4…\n$ availability_365               &lt;dbl&gt; 365, 365, 365, 365, 353, 364, 365, 90, …\n$ geometry                       &lt;POINT [m]&gt; POINT (22646.02 35167.9), POINT (…\n\n\n\n\n1.9\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n1556978 [m^2]\n\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   2.000   4.207   6.000  37.000 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 23449.05 ymin: 46001.23 xmax: 25594.22 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      290          3 WOODLANDS EAST    WDSZ03      N  WOODLANDS         WD\n      REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 NORTH REGION       NR C90769E43EE6B0F2 2014-12-05 24506.64 46991.63\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1   6603.608    2553464 MULTIPOLYGON (((24786.75 46...           37\n\n\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\n\n\n1.10\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#projection-transformation",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#projection-transformation",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.7 Projection Transformation",
    "text": "1.7 Projection Transformation\n\n1.7.1 Changing EPSG Code\n\nCheck the end; EPSG should be 3414, not 9001\n\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nWe use st_set_crs to convert the EPSG code\n\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n1.7.2 Repojecting using different coordinate system\n\nnote crs is 3414 and PROJCRS is now \"SVY21\"\n\n\npreschool3414 &lt;- st_transform(preschool, crs=3414)\n\nst_crs(preschool3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#importing-aspatial-as-tibble-then-convert-to-simple-feature-data-frame",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#importing-aspatial-as-tibble-then-convert-to-simple-feature-data-frame",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.8 Importing Aspatial as tibble, then convert to simple feature data frame",
    "text": "1.8 Importing Aspatial as tibble, then convert to simple feature data frame\n\n1.8.1 Import csv into tibble dataframe\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 4252 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood_group, neighbourhood, room_type\ndbl  (10): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist(listings)\n\n[[1]]\n# A tibble: 4,252 × 16\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  50646 Pleasant…  227796 Sujatha   Central Region      Bukit Timah       1.33\n 2  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 3  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 4  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 5 275343 Convenie… 1439258 Joyce     Central Region      Bukit Merah       1.29\n 6 275344 15 mins … 1439258 Joyce     Central Region      Bukit Merah       1.29\n 7 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 8 301247 Nice roo… 1552002 Rahul     Central Region      Geylang           1.32\n 9 324945 20 Mins … 1439258 Joyce     Central Region      Bukit Merah       1.29\n10 330089 Accomo@ … 1439258 Joyce     Central Region      Bukit Merah       1.29\n# ℹ 4,242 more rows\n# ℹ 9 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;\n\n\n\nglimpse(listings)\n\nRows: 4,252\nColumns: 16\n$ id                             &lt;dbl&gt; 50646, 71609, 71896, 71903, 275343, 275…\n$ name                           &lt;chr&gt; \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        &lt;dbl&gt; 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      &lt;chr&gt; \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            &lt;chr&gt; \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  &lt;chr&gt; \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ latitude                       &lt;dbl&gt; 1.33432, 1.34537, 1.34754, 1.34531, 1.2…\n$ longitude                      &lt;dbl&gt; 103.7852, 103.9589, 103.9596, 103.9610,…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 80, 178, 81, 81, 52, 40, 72, 41, 49, 49…\n$ minimum_nights                 &lt;dbl&gt; 90, 90, 90, 90, 14, 14, 90, 8, 14, 14, …\n$ number_of_reviews              &lt;dbl&gt; 18, 20, 24, 48, 20, 13, 133, 105, 14, 1…\n$ last_review                    &lt;date&gt; 2014-07-08, 2019-12-28, 2014-12-10, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.22, 0.28, 0.33, 0.67, 0.20, 0.16, 1.2…\n$ calculated_host_listings_count &lt;dbl&gt; 1, 4, 4, 4, 50, 50, 7, 1, 50, 50, 50, 4…\n$ availability_365               &lt;dbl&gt; 365, 365, 365, 365, 353, 364, 365, 90, …\n\n\n\n\n1.8.2 Aspatial tibble -&gt; feature dataframe\n\nlistings_sf &lt;- st_as_sf(listings, coords = c(\"longitude\", \"latitude\"), crs=4326) %&gt;%\nst_transform(crs = 3414)\nglimpse(listings_sf)\n\nRows: 4,252\nColumns: 15\n$ id                             &lt;dbl&gt; 50646, 71609, 71896, 71903, 275343, 275…\n$ name                           &lt;chr&gt; \"Pleasant Room along Bukit Timah\", \"Ens…\n$ host_id                        &lt;dbl&gt; 227796, 367042, 367042, 367042, 1439258…\n$ host_name                      &lt;chr&gt; \"Sujatha\", \"Belinda\", \"Belinda\", \"Belin…\n$ neighbourhood_group            &lt;chr&gt; \"Central Region\", \"East Region\", \"East …\n$ neighbourhood                  &lt;chr&gt; \"Bukit Timah\", \"Tampines\", \"Tampines\", …\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 80, 178, 81, 81, 52, 40, 72, 41, 49, 49…\n$ minimum_nights                 &lt;dbl&gt; 90, 90, 90, 90, 14, 14, 90, 8, 14, 14, …\n$ number_of_reviews              &lt;dbl&gt; 18, 20, 24, 48, 20, 13, 133, 105, 14, 1…\n$ last_review                    &lt;date&gt; 2014-07-08, 2019-12-28, 2014-12-10, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.22, 0.28, 0.33, 0.67, 0.20, 0.16, 1.2…\n$ calculated_host_listings_count &lt;dbl&gt; 1, 4, 4, 4, 50, 50, 7, 1, 50, 50, 50, 4…\n$ availability_365               &lt;dbl&gt; 365, 365, 365, 365, 353, 364, 365, 90, …\n$ geometry                       &lt;POINT [m]&gt; POINT (22646.02 35167.9), POINT (…"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#sf-geogprocessing",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#sf-geogprocessing",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.9 sf Geogprocessing",
    "text": "1.9 sf Geogprocessing\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   2.000   4.207   6.000  37.000 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 23449.05 ymin: 46001.23 xmax: 25594.22 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      290          3 WOODLANDS EAST    WDSZ03      N  WOODLANDS         WD\n      REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 NORTH REGION       NR C90769E43EE6B0F2 2014-12-05 24506.64 46991.63\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1   6603.608    2553464 MULTIPOLYGON (((24786.75 46...           37\n\n\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\n\n1.10\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#sf-geoprocessing-with-sf",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#sf-geoprocessing-with-sf",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.9 sf Geoprocessing with sf",
    "text": "1.9 sf Geoprocessing with sf\n\n1.9.1 Computing buffer area with st_buffer\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\n1.9.2 Counting area intersects st_intersects\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   2.000   4.207   6.000  37.000 \n\n\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 23449.05 ymin: 46001.23 xmax: 25594.22 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      290          3 WOODLANDS EAST    WDSZ03      N  WOODLANDS         WD\n      REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 NORTH REGION       NR C90769E43EE6B0F2 2014-12-05 24506.64 46991.63\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1   6603.608    2553464 MULTIPOLYGON (((24786.75 46...           37\n\n\n\nCalculating area using st_area, then\nusing mutate to add new column\n\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#outcomes-1",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#outcomes-1",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.1 Outcomes",
    "text": "2.1 Outcomes\n\nUse of tmap to plot chloropleth maps"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#eda-for-geospatial-ggplot",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#eda-for-geospatial-ggplot",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.10 EDA for Geospatial ggplot",
    "text": "1.10 EDA for Geospatial ggplot\n\nPlot histogram:\n\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\nggplot Histogram with details\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\nggplot Scatterplot with details\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#imports",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#imports",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.2 Imports",
    "text": "2.2 Imports\n\nAll are inside tidyverse\n\nreadr for delimited text file\ntidyr for data cleaning\ndplyr for data wrangling\nsf we know for simple features\n\n\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.3 Importing Data",
    "text": "2.3 Importing Data\n\n2.3.1 Data Types\n\nmpsz already downloaded;\nrespopagesextod2011to2020.csv retrieved from Department of Statistics\n\n\n\n2.3.2 Importing Geospatial Data\n\nif not run already in 1.4.1 before:\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\1darren\\ISSS624\\Hands-on_Ex01\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n2.3.2 Importing attribute data into R\n\nnow read csv\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesexfa2011to2020.csv\")\n\nRows: 738492 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, FA\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n2.3.4 Data preparation & wrangling\n\nThis function is too hugely nested\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\npopdata2020\n\n# A tibble: 234 × 7\n   PA         SZ                   YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n   &lt;chr&gt;      &lt;chr&gt;                &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1 ANG MO KIO ANG MO KIO TOWN CEN…  1440             2640   770  4850      0.837\n 2 ANG MO KIO CHENG SAN             6660            15380  6080 28120      0.828\n 3 ANG MO KIO CHONG BOON            6150            13970  6450 26570      0.902\n 4 ANG MO KIO KEBUN BAHRU           5500            12040  5080 22620      0.879\n 5 ANG MO KIO SEMBAWANG HILLS       2130             3390  1270  6790      1.00 \n 6 ANG MO KIO SHANGRI-LA            3970             8430  3540 15940      0.891\n 7 ANG MO KIO TAGORE                2220             4160  1520  7900      0.899\n 8 ANG MO KIO TOWNSVILLE            4720            11430  5050 21200      0.855\n 9 ANG MO KIO YIO CHU KANG EAST     1190             2230   740  4160      0.865\n10 ANG MO KIO YIO CHU KANG WEST     6610            12810  4680 24100      0.881\n# ℹ 224 more rows\n\n\n\nLeft join mpsz on popdata2020 to create simple dataframe:\n\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#importing-data-1",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#importing-data-1",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.3 Importing Data",
    "text": "2.3 Importing Data"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#importing-data-2",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#importing-data-2",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.3 Importing Data",
    "text": "2.3 Importing Data"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#using-tmap",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#using-tmap",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4 Using tmap",
    "text": "2.4 Using tmap\n\n2.4.1 Quick tmap using qtm()\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, fill = \"DEPENDENCY\")\n\n\n\n\n\n\n2.4.2 Complex tmap using tmap\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.2.1 Drawing base map, adding polygon layer",
    "text": "2.4.2.1 Drawing base map, adding polygon layer\n\ntm_shape(mpsz_pop2020) + tm_polygons()"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#colouring-polygons",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#colouring-polygons",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.2.2 Colouring polygons",
    "text": "2.4.2.2 Colouring polygons\n\ntm_shape(mpsz_pop2020) + tm_polygons(\"DEPENDENCY\")"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-1",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-1",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.2.3 Drawing base map, adding polygon layer",
    "text": "2.4.2.3 Drawing base map, adding polygon layer\n\ntm_polygons() is really just tm_borders() + tm_fill\n\n\ntm_shape(mpsz_pop2020) + tm_fill(\"DEPENDENCY\")\n\n\n\n\n\ntm_shape(mpsz_pop2020) + tm_borders()\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#data-classification-beyond-pretty",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#data-classification-beyond-pretty",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.3 Data classification beyond pretty",
    "text": "2.4.3 Data classification beyond pretty\n\nJenks, 5Equal, 5Jenks, 20kmeans, 5Custom Breaks, 5\n\n\n\nUsing jenks natural break optimization\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nExpecting uniform distribution, quantiles of same lengths – note how most data congregates in first quantile\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nUsing jenks natural break optimization\n20 classes for illustration\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nUsing jenks natural break optimization\n20 classes for illustration\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"kmeans\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nfirst, quick data anaylis:\n\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.7113  0.7926  0.8561  0.8786 19.0000      92 \n\n\n\ndecision to use 0.6, 0.7, 0.8, 0.9;\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-2",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-2",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.2.1 Drawing base map, adding polygon layer",
    "text": "2.4.2.1 Drawing base map, adding polygon layer\n\ntm_shape(mpsz_pop2020) + tm_polygons()"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-3",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-3",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.2.1 Drawing base map, adding polygon layer",
    "text": "2.4.2.1 Drawing base map, adding polygon layer\n\ntm_shape(mpsz_pop2020) + tm_polygons()"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-4",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#drawing-base-map-adding-polygon-layer-4",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.2.1 Drawing base map, adding polygon layer",
    "text": "2.4.2.1 Drawing base map, adding polygon layer\n\ntm_shape(mpsz_pop2020) + tm_polygons()"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#colour-schemes",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#colour-schemes",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.4 Colour schemes:",
    "text": "2.4.4 Colour schemes:\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#legend-opptions",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#legend-opptions",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.5.1 Legend opptions",
    "text": "2.4.5.1 Legend opptions\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#map-styles",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#map-styles",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.5.2 Map Styles",
    "text": "2.4.5.2 Map Styles\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\""
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#compass-scale-bar-grid-lines",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#compass-scale-bar-grid-lines",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.5.3 Compass, Scale Bar, Grid lines",
    "text": "2.4.5.3 Compass, Scale Bar, Grid lines\n\ntmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#facet-maps-stacked-chloropleths",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#facet-maps-stacked-chloropleths",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.6 Facet maps: stacked chloropleths",
    "text": "2.4.6 Facet maps: stacked chloropleths\n\nusing ncols\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\ndefining different styles for colours\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\nby tm_facets()\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\nTesselating using tmap_arrange()\n\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "",
    "text": "On this page, I address Hands-On Exercise for Chapter 02:"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#import-hunan-shapefile-datasets",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#import-hunan-shapefile-datasets",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "1.2 Import Hunan Shapefile datasets",
    "text": "1.2 Import Hunan Shapefile datasets\n\n1.2.1 Geospatial Data Sets\n\n/data/geospatial/Hunan.###: This is a geospatial data set in ESRI shapefile format.\n\n\n\n1.2.2 Aspatial Data Sets\n\n/data/aspatial/Hunan_2012.csv: This csv file contains selected Hunan’s local development indicators in 2012."
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#import-packages-files",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#import-packages-files",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "1.3 Import packages & files",
    "text": "1.3 Import packages & files\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\1darren\\ISSS624\\Hands-on_Ex02\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nLeft join to select only specific columns\n\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#visualisation-with-qtm-next-to-basemap",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#visualisation-with-qtm-next-to-basemap",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "1.4 Visualisation with qtm next to basemap",
    "text": "1.4 Visualisation with qtm next to basemap\n\n\nshow code\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#distance-based-neighbours",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#distance-based-neighbours",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "1.6 Distance-based neighbours",
    "text": "1.6 Distance-based neighbours\n\n1.6.1 Identifying max inter-neighbour distance\n\nk1 created by parsing\n\nknearneigh returns matrix of k (default=1) nearest neighbours’s index based on coords, apparently in knn object\nknn2nb converts k-nearest-neighbours to neighbours-list in nb class\n\nunlist unbinds list structure of output into vector\n\nnbdists takes in nb neighbours list and returns euclidean distances between neighbours in same structure\n\nall this searches the greatest neighbour distance (max 61.79 below) to ensure each region has at least one neighbour\n\n\n\nshow code\n# coords &lt;- coordinates(hunan) #following previous steps\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n1.6.2 Creating fixed distance weight matrix\n\ndnearneigh returns list of vectors of regions satisfying distance criteria (eg within max neighbour distance)\n\n\n\nshow code\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\ncat(\"Printing details of distance weight matrix\\n\")\n\n\nPrinting details of distance weight matrix\n\n\nshow code\nwm_d62\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nshow code\ncat(\"\\nInspecting first six rows of [wm_d62] obj \\n\")\n\n\n\nInspecting first six rows of [wm_d62] obj \n\n\nshow code\ncat(str(head(wm_d62, n=6)))\n\n\nList of 6\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n\n\nshow code\ncat(\"\\n^ Note how 6th row only has one neighbour, i.e. region 69\")\n\n\n\n^ Note how 6th row only has one neighbour, i.e. region 69\n\n\n\n\n\n\n\n\nQuiz: What is the meaning of “Average number of links: 3.681818” shown above?\n\n\n\n\nEach region has 3.68 links on average, i.e. (total number of links) / (total number of regions)\n\n\n\n\nAlternative structure (warning: long!)\n\nthis uses table to combine the column name from hunan$Country with\ncard apparently looks at the length of the neighbour list and prints 1 if yes, 0 if no (i.e. Anhua has 1 neighobur, Anren has 4)\n\n\n\n\n\n\n\n\nUsing str() to print adjacency weight matrix\n\n\n\n\n\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\n\n\n\n\n\n1.6.2x Unfinished Disjoint subgraph plot\n\nn.comp.nb() finds the number of disjoint connected subgraphs [see source]\n\n\n\nshow code\nn_comp &lt;- n.comp.nb(wm_d62)\ncat(\"Number of disjoint subgraphs:\", n_comp$nc)\n\n\nNumber of disjoint subgraphs: 1\n\n\nshow code\ncat(\"\\nTable of disjoint subgraphs by region:\\n\")\n\n\n\nTable of disjoint subgraphs by region:\n\n\nshow code\ntable(n_comp$comp.id)\n\n\n\n 1 \n88 \n\n\nshow code\ncat(\"^ i.e. 88 regions all report 1 distjoint subgraph, i.e. no region is disjoint\")\n\n\n^ i.e. 88 regions all report 1 distjoint subgraph, i.e. no region is disjoint\n\n\n\n1.6.2.1 Plotting fixed distance weight matrix\n\nPlot background of hunan$Geometry\nPlot points of centroids in coords, connected by black lines\nPlot k=1-nearest-neighbours (i.e. show nearest neighbours as in k1) in red lines\n\n\n\nshow code\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\n\n\nSide-by-side comparison:\n\n\n\nshow code\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08, main=\"1st nearest neighbours\")\ntitle(\"1st Nearest Neighbours\")\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6, main=\"Distance link\")\ntitle(\"Distance-Based Neighbours\")\n\n\n\n\n\n\n\n\n1.6.3 Exploring Contiguity Weights\n\nNow allowing 6 nearest neighbours using knn\n\n\n\nshow code\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\ncat(\"Printing details of knn neighbour matrix, k=6 \\n\")\n\n\nPrinting details of knn neighbour matrix, k=6 \n\n\nshow code\nknn6\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nshow code\ncat(\"\\nInspecting first six rows of [knn6] obj \\n\")\n\n\n\nInspecting first six rows of [knn6] obj \n\n\nshow code\ncat(str(head(knn6, n=6)))\n\n\nList of 6\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n\n\nshow code\ncat(\"\\n^ Note how every row now has 6 neighbours exactly.\")\n\n\n\n^ Note how every row now has 6 neighbours exactly.\n\n\n\nHere’s what it looks like instead:\n\n\n\nshow code\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st Nearest Neighbours\")\nplot(k1, coords, pch = 19, cex = 0.6, add=TRUE, col=\"red\", length=0.08)\n\n\nplot(hunan$geometry, border=\"lightgrey\", main =\"6st Nearest Neighbours\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#contiguity-spatial-weights",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#contiguity-spatial-weights",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "1.5 Contiguity Spatial Weights",
    "text": "1.5 Contiguity Spatial Weights\n\nThere are 2 types of contiguity, based on chess pieces\n\nQUEEN two regions are contiguous if they share a vertex;\nROOK two regions are contiguous if they share an edge;\n\nLiterature suggests they are mostly similar, but QUEEN is more robust at capturing neighbouring/contiguity more consistently\n\n\n1.5.1 QUEEN Contiguity Neighbours\n\n\nshow code\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nIdentifying all neighbours of most connected region:\n\n\nshow code\nwm_q[[85]]\n\n\n [1]  1  2  3  5  6 32 56 57 69 75 78\n\n\n\nName of region\n\n\n\nshow code\ncat(\"Most connected region:\", hunan$County[85], \"\\n\\n&gt;&gt; ID\\t|  Name \\t| GDPPC  \\t|  Neighbours:\")\n\n\nMost connected region: Taoyuan \n\n&gt;&gt; ID   |  Name     | GDPPC     |  Neighbours:\n\n\nshow code\nfor (value in wm_q[[85]]){\n  cat(\"\\n&gt;&gt; \", value, \"\\t|\", hunan$County[value], \"  \\t|\", hunan$GDPPC[value], \"  \\t|\", wm_q[[value]])\n  }\n\n\n\n&gt;&gt;  1   | Anxiang       | 23667     | 2 3 4 57 85\n&gt;&gt;  2   | Hanshou       | 20981     | 1 57 58 78 85\n&gt;&gt;  3   | Jinshi    | 34592     | 1 4 5 85\n&gt;&gt;  5   | Linli     | 25554     | 3 4 6 85\n&gt;&gt;  6   | Shimen    | 27137     | 4 5 69 75 85\n&gt;&gt;  32  | Yuanling      | 24194     | 24 31 50 54 55 56 75 85\n&gt;&gt;  56  | Anhua     | 14567     | 8 31 32 36 78 80 85\n&gt;&gt;  57  | Nan       | 21311     | 1 2 58 64 76 85\n&gt;&gt;  69  | Cili      | 18714     | 6 75 85\n&gt;&gt;  75  | Sangzhi       | 14624     | 6 32 53 55 69 85\n&gt;&gt;  78  | Taojiang      | 19509     | 2 8 9 56 58 68 85\n\n\n\nPrint adjacency matrix (warning: long!)\n\n\n\n\n\n\n\nUsing str() to print adjacency weight matrix\n\n\n\n\n\n\nstr(wm_q)\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\n\n\n\n1.5.2 ROOK Contiguity Neighbours\n\n\nshow code\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\n\nWho’s not there?\n\n\nsetdiff(wm_q[[85]], wm_r[[85]])\n\n[1] 57\n\n\n\n\n1.5.3 Exploring Contiguity Weights\n\nGet latitude, longtiude by\n\nmap_dbl retrieving double-precision datatype via map function on geometry column of hunan\nuse st_centroid to find centroid of each row\nindexing via [[1]], [[2] for long,lat of centroid\nretrieving a vector of regions\n\ncbind combines separate vectors back into single dataframe (coords)with two columns\n\n\n\nshow code\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\nhead(coords)\n\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\nnow plot Queen-contiguity based map using centroid vertices:\n\n\n\nshow code\npar(mfrow=c(1,3))\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\", main=\"Queen Contiguity\")\ntitle(\"QUEEN Contiguity\")\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"blue\", main=\"Rook Contiguity\")\ntitle(\"ROOK Contiguity\")\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\", main=\"Queen Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"blue\", main=\"Rook Contiguity\")\ntitle(\"Differences:\")"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#using-inversed-distance-to-plot-neighbour",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#using-inversed-distance-to-plot-neighbour",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "1.7 Using Inversed Distance to plot neighbour",
    "text": "1.7 Using Inversed Distance to plot neighbour\n\nStarting with wm_q for queen contiguity, coords for centroids\n\nnbdists takes in nb neighbours list and returns euclidean distances between neighbours in same structure\nlonglat uses Great Circle distances i.e. distance on a round earth instead of flat map\n\nlapply function(x) applies inverse (1/x) to all output distances\n\n\n\nshow code\ndist &lt;- nbdists(wm_q, coords, longlat = TRUE)\nids &lt;- lapply(dist, function(x) 1/(x))\ncat(\"\\nInspecting first five rows of [knn6] obj \\n\\n\")\n\n\n\nInspecting first five rows of [knn6] obj \n\n\nshow code\nhead(ids, 5)\n\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n[[4]]\n[1] 0.01820896 0.02822040 0.03414741 0.01539065\n\n[[5]]\n[1] 0.03695795 0.03414741 0.01524598 0.01618354\n\n\n\n1.7.1 Creating row-standardised weight matrix\n\nstyle \"W\" gives equal weight to each neighbour (e.g. 0.125 for 8 neighbours, below)\n\n\n\nshow code\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nshow code\ncat(\"\\nInspecting weights for region 10, with 8 neighbours: \\n\")\n\n\n\nInspecting weights for region 10, with 8 neighbours: \n\n\nshow code\nrswm_q$weights[10]\n\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\n\nstyle \"B\" performs standardisation based on row distance\n\n\n\nshow code\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\nshow code\ncat(\"\\nPrinting summary stats for row-standardised weights matrix \\n\")\n\n\n\nPrinting summary stats for row-standardised weights matrix \n\n\nshow code\nsummary(unlist(rswm_ids$weights))\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338 \n\n\nshow code\ncat(\"\\nInspecting weights for region 10, with 8 neighbours: \\n\")\n\n\n\nInspecting weights for region 10, with 8 neighbours: \n\n\nshow code\nrswm_ids$weights[10]\n\n\n[[1]]\n[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863\n[8] 0.01500046"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#making-use-of-spatial-weight-matrix",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#making-use-of-spatial-weight-matrix",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "1.8 Making use of spatial weight matrix",
    "text": "1.8 Making use of spatial weight matrix\n\n1.8.1 Spatial lag with row-standardized weights\n\n\n\n\n\n\nQuiz: Can you see the meaning of Spatial lag with row-standardized weights now?\n\n\n\n\nSpatial lag as a concept describes how spatially-neighbouring regions affect each other\n\nUse of row-standardised weights assigns weights to neighbours based on proximity (i.e. nearer neighbour affects more)\nIt’s one way to calculate spatial lag, using distance to weight importance of neighbours\n\n\n\n\n\nCalculating spatially lagged GDPPC values\n\n\n\nshow code\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\n\n\ncat(\"\\nInspecting first 5 values for `Average Neighbour GDPPC`: \\n\")\n\n\n\nInspecting first 5 values for `Average Neighbour GDPPC`: \n\n\nshow code\nhead(GDPPC.lag, 5)\n\n\n[1] 24847.20 22724.80 24143.25 27737.50 27270.25\n\n\n\nCreating lag.res dataframe with regionname and lag GDPPC value\n\nNAME_3 column created for ease of left-join with hunan\n\nleft_join to create table of rows of region-neighbour-lag GDPPC-geometry\n\n\n\nshow code\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\n\ncat(\"\\nInspecting first row for `lag.res` : \\n\")\n\n\n\nInspecting first row for `lag.res` : \n\n\nshow code\ncat(str(lag.res[1]))\n\n\n'data.frame':   88 obs. of  1 variable:\n $ NAME_3: chr  \"Anxiang\" \"Hanshou\" \"Jinshi\" \"Li\" ...\n\n\nshow code\ncat(\"\\nShowing first 6 rows for joined `hunan +lag.res` : \\n\")\n\n\n\nShowing first 6 rows for joined `hunan +lag.res` : \n\n\nshow code\nhunan &lt;- left_join(hunan,lag.res)\n\n\nJoining with `by = join_by(NAME_3)`\n\n\nshow code\nhead(hunan)\n\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\n\nVisual comparison of regional GDPPC and spatial lag GDPPC\n\nAdjusted colour breaks to use comparable scale – MAPS CAN LIE! as Prof Kam says\n\n\n\n\nshow code\ngdppc &lt;- qtm(hunan, \"GDPPC\", title=\"GDPPC\", title.position=c('right', 'top'))\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\", title=\"Lag GDPPC\", title.position=c('right', 'top'),\n                  fill.style=\"fixed\",fill.breaks=c(0,20000,40000,60000,80000,100000))\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n1.8.2 spatial lag as a sum of neighbouring values\n\nUsing binary weights (0/1) to create spatial lag as a simple unweighted sum\n\nuse of nb2listw, style = \"B\" from before:\n\n\n\nshow code\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\n\n\n\nshow code\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\ncat(\"Printing first five rows of lag_sum\\n\")\n\n\nPrinting first five rows of lag_sum\n\n\nshow code\nfor (i in 1:5) {\n  print(str(c(i, lag_sum[[1]][[i]], lag_sum[[2]][[i]])))\n}\n\n\n chr [1:3] \"1\" \"Anxiang\" \"124236\"\nNULL\n chr [1:3] \"2\" \"Hanshou\" \"113624\"\nNULL\n chr [1:3] \"3\" \"Jinshi\" \"96573\"\nNULL\n chr [1:3] \"4\" \"Li\" \"110950\"\nNULL\n chr [1:3] \"5\" \"Linli\" \"109081\"\nNULL\n\n\nshow code\nhunan &lt;- left_join(hunan, lag.res)\n\n\nJoining with `by = join_by(NAME_3)`\n\n\nshow code\ngdppc &lt;- qtm(hunan, \"GDPPC\", title=\"GDPPC\", title.position=c('right', 'top'), \n             fill.style=\"fixed\", fill.breaks=c(0,20000,40000,60000,80000,100000, 200000, 300000, 400000, 500000))\n\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\",\n                     title=\"lag_sum GDPPC\", title.position=c('right', 'top'),\n                     fill.style=\"fixed\", fill.breaks=c(0,20000,40000,60000,80000,100000, 200000, 300000, 400000, 500000)\n                     )\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\nshow code\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nQuiz: Can you understand the meaning of Spatial lag as a sum of neighboring values now?\n\n\n\n\nUnlike before, here the spatial lag GDPP is calculated simply as a sum of neighbouring regions; this looks less accurate\n\nmore neighbours, more spatial lag; leads to huge disparity if one region has 8 neighbours and one region has only 1\nnote that often the scale is up to 10x the GDPPC; harder to compare values\n\n\n\n\n\n\n1.8.3 Spatial window average\n\nSpatial Window Average is row-standardised weights + self (“diagonal element”)\n\narea[1] now has an additional ‘neighbour’, itself, for use in calculating row-standardised weights\n\n\n\n\nshow code\nwm_qs &lt;- include.self(wm_q)\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\n\nNow we create lag variable, as before;\n\nlag.listw calculates lag value\nas.data.frame() and list() converts into dataframe\ncolnames renames columns to NAME_3, lag_window_avg GDPPC for ease of left joining\n\nMaybe I should’ve used kable() to display my values instead of using cat to print:\n\n\n\nshow code\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\n\nJoining with `by = join_by(NAME_3)`\n\n\nshow code\ncat(\"Displaying table of modified values:\")\n\n\nDisplaying table of modified values:\n\n\nshow code\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_sum GDPPC\",\n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_sum GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n124236\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n113624\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n96573\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n110950\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n109081\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n106244\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n174988\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n235079\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n273907\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n256221\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n98013\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n104050\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n102846\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n92017\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n133831\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n158446\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n141883\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n119508\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n150757\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n153324\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n113593\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n129594\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n142149\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n100119\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n82884\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n74668\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n43184\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n99244\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n46549\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n20518\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n140576\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n121601\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n92069\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n43258\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n144567\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n132119\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n51694\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n59024\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n69349\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n73780\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n94651\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n100680\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n69398\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n52798\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n140472\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n118623\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n180933\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n82798\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n83090\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n97356\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n59482\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n77334\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n38777\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n111463\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n74715\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n174391\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n150558\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n122144\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n68012\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n84575\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n143045\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n51394\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n98279\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n47671\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n26360\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n236917\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n220631\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n185290\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n64640\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n70046\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n126971\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n144693\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n129404\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n284074\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n112268\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n203611\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n145238\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n251536\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n108078\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n238300\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n108870\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n108085\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n262835\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n248182\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n244850\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n404456\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n67608\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n33860\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nNow comparing lag_gdppc and w_ave_gdppc on the same colour scale\n\n\n\nshow code\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\", title=\"Lag GDPPC\", title.position=c('right', 'top'), \n                  fill.style=\"fixed\",fill.breaks=c(10000,20000,30000,40000,50000,60000),\n                 legend.text.size = 0.5,legend.title.size = 0.5\n                 )\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\",\n                   title=\"lag_window_avg GDPPC\", title.position=c('right', 'top'), \n                   fill.style=\"fixed\", fill.breaks=c(10000,20000,30000,40000,50000,60000),\n                   legend.text.size = 0.5,legend.title.size = 0.5\n                   )\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n1.8.4 Wpatial Window Sum\n\nSimple sum of neighbouring values including self/diagonal value\n\nlapply to create matrix of ones in shape of nb structure\nuse of nb2listw to assign a weights list object according to nb shape\n\nuse of lag.listw() to create lag variable for each region\n\n\n\nshow code\nwm_qs &lt;- include.self(wm_q) # Run above \nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\n\ncat(\"Printing first five rows of w_sum_gdppc\\n\")\n\n\nPrinting first five rows of w_sum_gdppc\n\n\nshow code\nfor (i in 1:5) {\n  print(str(c(i, w_sum_gdppc[[1]][[i]], w_sum_gdppc[[2]][[i]])))\n}\n\n\n chr [1:3] \"1\" \"Anxiang\" \"147903\"\nNULL\n chr [1:3] \"2\" \"Hanshou\" \"134605\"\nNULL\n chr [1:3] \"3\" \"Jinshi\" \"131165\"\nNULL\n chr [1:3] \"4\" \"Li\" \"135423\"\nNULL\n chr [1:3] \"5\" \"Linli\" \"134635\"\nNULL\n\n\n\nThen, just as before, convert using as.data.frame(), rename with col_names and left_join into huge hunan “sf” data.frame\n\n\n\nshow code\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\n\nJoining with `by = join_by(NAME_3)`\n\n\nshow code\nhunan %&gt;%\n  select(\"County\", \n         \"GDPPC\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\",\n         \"lag_sum GDPPC\",\n         \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCounty\nGDPPC\nlag GDPPC\nlag_window_avg GDPPC\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n23667\n24847.20\n24650.50\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n20981\n22724.80\n22434.17\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n34592\n24143.25\n26233.00\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n24473\n27737.50\n27084.60\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n25554\n27270.25\n26927.00\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n27137\n21248.80\n22230.17\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n63118\n43747.00\n47621.20\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n62202\n33582.71\n37160.12\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n70666\n45651.17\n49224.71\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n12761\n32027.62\n29886.89\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n8497\n32671.00\n26627.50\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n32091\n20810.00\n22690.17\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n23986\n25711.50\n25366.40\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n11286\n30672.33\n25825.75\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n17814\n33457.75\n30329.00\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n37651\n31689.20\n32682.83\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n65706\n20269.00\n25948.62\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n24418\n23901.60\n23987.67\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n27485\n25126.17\n25463.14\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21911\n21903.43\n21904.38\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n25172\n22718.60\n23127.50\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n26105\n25918.80\n25949.83\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n18001\n20307.00\n20018.75\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n17026\n20023.80\n19524.17\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n30846\n16576.80\n18955.00\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n14334\n18667.00\n17800.40\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n20348\n14394.67\n15883.00\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n13744\n19848.80\n18831.33\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n12781\n15516.33\n14832.50\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n15412\n20518.00\n17965.00\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n13863\n17572.00\n17159.89\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n24194\n15200.12\n16199.44\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n20518\n18413.80\n18764.50\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n64257\n14419.33\n26878.75\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n17755\n24094.50\n23188.86\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n13398\n22019.83\n20788.14\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n10132\n12923.50\n12365.20\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n20901\n14756.00\n15985.00\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13240\n13869.80\n13764.83\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n9572\n12296.67\n11907.43\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n25246\n15775.17\n17128.14\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n16069\n14382.86\n14593.62\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n12112\n11566.33\n11644.29\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n10732\n13199.50\n12706.00\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n11514\n23412.00\n21712.29\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n55570\n39541.00\n43548.25\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n29361\n36186.60\n35049.00\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n14563\n16559.60\n16226.83\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n13382\n20772.50\n19294.40\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n11580\n19471.20\n18156.00\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n20337\n19827.33\n19954.75\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n31537\n15466.80\n18145.17\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n9754\n12925.67\n12132.75\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n17472\n18577.17\n18419.29\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n9590\n14943.00\n14050.83\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n14567\n24913.00\n23619.75\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n21311\n25093.00\n24552.71\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n26258\n24428.80\n24733.67\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n15801\n17003.00\n16762.60\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n20088\n21143.75\n20932.60\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n12697\n20435.00\n19467.75\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n21942\n17131.33\n18334.00\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n14426\n24569.75\n22541.00\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n30413\n23835.50\n26028.00\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n31897\n26360.00\n29128.50\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n42497\n47383.40\n46569.00\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n17252\n55157.75\n47576.60\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n33983\n37058.00\n36545.50\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n18714\n21546.67\n20838.50\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n20078\n23348.67\n22531.00\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n41491\n42323.67\n42115.50\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n21021\n28938.60\n27619.00\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n36264\n25880.80\n27611.33\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n27589\n47345.67\n44523.29\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n14624\n18711.33\n18127.43\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n26360\n29087.29\n28746.38\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20638\n20748.29\n20734.50\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n19509\n35933.71\n33880.62\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n9653\n15439.71\n14716.38\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n18346\n29787.50\n28516.22\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n17733\n18145.00\n18086.14\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n19382\n21617.00\n21244.50\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n32853\n29203.89\n29568.80\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n88656\n41363.67\n48119.71\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22879\n22259.09\n22310.75\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n27060\n44939.56\n43151.60\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n18059\n16902.00\n17133.40\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n17168\n16930.00\n17009.33\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nSide-by-side comparison plot with lag_sum GDPPC\n\n\n\nshow code\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\",\n                     title=\"lag_sum GDPPC\", title.position=c('right', 'top'),\n                     fill.style=\"fixed\", fill.breaks=c(0,100000, 200000, 300000, 400000, 500000),\n                     legend.text.size = 0.5,legend.title.size = 0.5\n                     )\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\",\n                   title=\"w_sum GDPPC\", title.position=c('right', 'top'),\n                   fill.style=\"fixed\", fill.breaks=c(0,100000, 200000, 300000, 400000, 500000),\n                  legend.text.size = 0.5,legend.title.size = 0.5\n                   )\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex01/Hands-on_Ex01.html#conditional-spatial-map",
    "href": "Hands-on_Ex01/Hands-on_Ex01.html#conditional-spatial-map",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2.4.7 Conditional Spatial Map",
    "text": "2.4.7 Conditional Spatial Map\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#analytical-question",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#analytical-question",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.1 Analytical Question",
    "text": "2.1 Analytical Question\n\nIdentify if development is equally distributed geographically in Hunan province\nIf NO, then ask: Is there signs of spatial clustering?\nIf YES, then ask: Where is the spatial clustering?"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#import-datasets",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#import-datasets",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.2 Import Datasets",
    "text": "2.2 Import Datasets"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#import-packages",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#import-packages",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.3 Import Packages",
    "text": "2.3 Import Packages\n\nActually, the same datasets are used from above; see Section 1.2\n\n/data/geospatial/Hunan.###: This is a geospatial data set in ESRI shapefile format.\n/data/geospatial/Hunan.###: This is a geospatial data set in ESRI shapefile format.\n\nSimilarly, the same packages are used, see Section 1.3\n\nsf, spdep, tmap, tidyverse\n\n\n\n# import can be ignored, loaded from before\n# pacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n# We run here to reload hunan dataframe, remove spatial lag columns added in earlier\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\1darren\\ISSS624\\Hands-on_Ex02\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\nkable(hunan)\n\n\n\n\n\n\n\n\n\n\n\n\n\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…\n\n\nChangde\n21102\nLi\nCounty\nLi\n24473\nPOLYGON ((111.3731 29.94649…\n\n\nChangde\n21103\nLinli\nCounty\nLinli\n25554\nPOLYGON ((111.6324 29.76288…\n\n\nChangde\n21104\nShimen\nCounty\nShimen\n27137\nPOLYGON ((110.8825 30.11675…\n\n\nChangsha\n21109\nLiuyang\nCounty City\nLiuyang\n63118\nPOLYGON ((113.9905 28.5682,…\n\n\nChangsha\n21110\nNingxiang\nCounty\nNingxiang\n62202\nPOLYGON ((112.7181 28.38299…\n\n\nChangsha\n21111\nWangcheng\nCounty\nWangcheng\n70666\nPOLYGON ((112.7914 28.52688…\n\n\nChenzhou\n21112\nAnren\nCounty\nAnren\n12761\nPOLYGON ((113.1757 26.82734…\n\n\nChenzhou\n21115\nGuidong\nCounty\nGuidong\n8497\nPOLYGON ((114.1799 26.20117…\n\n\nChenzhou\n21117\nJiahe\nCounty\nJiahe\n32091\nPOLYGON ((112.4425 25.74358…\n\n\nChenzhou\n21118\nLinwu\nCounty\nLinwu\n23986\nPOLYGON ((112.5914 25.55143…\n\n\nChenzhou\n21119\nRucheng\nCounty\nRucheng\n11286\nPOLYGON ((113.6759 25.87578…\n\n\nChenzhou\n21120\nYizhang\nCounty\nYizhang\n17814\nPOLYGON ((113.2621 25.68394…\n\n\nChenzhou\n21121\nYongxing\nCounty\nYongxing\n37651\nPOLYGON ((113.3169 26.41843…\n\n\nChenzhou\n21122\nZixing\nCounty City\nZixing\n65706\nPOLYGON ((113.7311 26.16259…\n\n\nHengyang\n21123\nChangning\nCounty City\nChangning\n24418\nPOLYGON ((112.6144 26.60198…\n\n\nHengyang\n21124\nHengdong\nCounty\nHengdong\n27485\nPOLYGON ((113.1056 27.21007…\n\n\nHengyang\n21125\nHengnan\nCounty\nHengnan\n21911\nPOLYGON ((112.7599 26.98149…\n\n\nHengyang\n21126\nHengshan\nCounty\nHengshan\n25172\nPOLYGON ((112.607 27.4689, …\n\n\nHengyang\n21129\nLeiyang\nCounty\nLeiyang\n26105\nPOLYGON ((112.9996 26.69276…\n\n\nHengyang\n21130\nQidong\nCounty\nQidong\n18001\nPOLYGON ((111.7818 27.0383,…\n\n\nHuaihua\n21131\nChenxi\nCounty\nChenxi\n17026\nPOLYGON ((110.2624 28.21778…\n\n\nHuaihua\n21134\nZhongfang\nCounty\nZhongfang\n30846\nPOLYGON ((109.9431 27.72858…\n\n\nHuaihua\n21135\nHuitong\nCounty\nHuitong\n14334\nPOLYGON ((109.9419 27.10512…\n\n\nHuaihua\n21136\nJingzhou\nCounty\nJingzhou\n20348\nPOLYGON ((109.8186 26.75842…\n\n\nHuaihua\n21137\nMayang\nAutonomous County\nMayang\n13744\nPOLYGON ((109.795 27.98008,…\n\n\nHuaihua\n21138\nTongdao\nAutonomous County\nTongdao\n12781\nPOLYGON ((109.9294 26.46561…\n\n\nHuaihua\n21139\nXinhuang\nAutonomous County\nXinhuang\n15412\nPOLYGON ((109.227 27.43733,…\n\n\nHuaihua\n21140\nXupu\nCounty\nXupu\n13863\nPOLYGON ((110.7189 28.30485…\n\n\nHuaihua\n21141\nYuanling\nCounty\nYuanling\n24194\nPOLYGON ((110.9652 28.99895…\n\n\nHuaihua\n21142\nZhijiang\nAutonomous County\nZhijiang\n20518\nPOLYGON ((109.8818 27.60661…\n\n\nLoudi\n21143\nLengshuijiang\nCounty City\nLengshuijiang\n64257\nPOLYGON ((111.5307 27.81472…\n\n\nLoudi\n21146\nShuangfeng\nCounty\nShuangfeng\n17755\nPOLYGON ((112.263 27.70421,…\n\n\nLoudi\n21147\nXinhua\nCounty\nXinhua\n13398\nPOLYGON ((111.3345 28.19642…\n\n\nShaoyang\n21148\nChengbu\nAutonomous County\nChengbu\n10132\nPOLYGON ((110.4455 26.69317…\n\n\nYongzhou\n21149\nDongan\nDistrict\nDongan\n20901\nPOLYGON ((111.4531 26.86812…\n\n\nShaoyang\n21150\nDongkou\nCounty\nDongkou\n13240\nPOLYGON ((110.6622 27.37305…\n\n\nShaoyang\n21151\nLonghui\nCounty\nLonghui\n9572\nPOLYGON ((110.985 27.65983,…\n\n\nShaoyang\n21152\nShaodong\nCounty\nShaodong\n25246\nPOLYGON ((111.9054 27.40254…\n\n\nShaoyang\n21155\nSuining\nCounty\nSuining\n16069\nPOLYGON ((110.389 27.10006,…\n\n\nShaoyang\n21156\nWugang\nCounty City\nWugang\n12112\nPOLYGON ((110.9878 27.03345…\n\n\nShaoyang\n21157\nXinning\nCounty\nXinning\n10732\nPOLYGON ((111.0736 26.84627…\n\n\nShaoyang\n21158\nXinshao\nCounty\nXinshao\n11514\nPOLYGON ((111.6013 27.58275…\n\n\nXiangtan\n21159\nShaoshan\nCounty City\nShaoshan\n55570\nPOLYGON ((112.5391 27.97742…\n\n\nXiangtan\n21162\nXiangxiang\nCounty City\nXiangxiang\n29361\nPOLYGON ((112.4549 28.05783…\n\n\nXiangxi Tujia and Miao\n21163\nBaojing\nCounty\nBaojing\n14563\nPOLYGON ((109.7015 28.82844…\n\n\nXiangxi Tujia and Miao\n21164\nFenghuang\nCounty\nFenghuang\n13382\nPOLYGON ((109.5239 28.19206…\n\n\nXiangxi Tujia and Miao\n21165\nGuzhang\nCounty\nGuzhang\n11580\nPOLYGON ((109.8968 28.74034…\n\n\nXiangxi Tujia and Miao\n21166\nHuayuan\nCounty\nHuayuan\n20337\nPOLYGON ((109.5647 28.61712…\n\n\nXiangxi Tujia and Miao\n21167\nJishou\nCounty City\nJishou\n31537\nPOLYGON ((109.8375 28.4696,…\n\n\nXiangxi Tujia and Miao\n21168\nLongshan\nCounty\nLongshan\n9754\nPOLYGON ((109.6337 29.62521…\n\n\nXiangxi Tujia and Miao\n21169\nLuxi\nCounty\nLuxi\n17472\nPOLYGON ((110.1067 28.41835…\n\n\nXiangxi Tujia and Miao\n21170\nYongshun\nCounty\nYongshun\n9590\nPOLYGON ((110.0003 29.29499…\n\n\nYiyang\n21171\nAnhua\nCounty\nAnhua\n14567\nPOLYGON ((111.6034 28.63716…\n\n\nYiyang\n21172\nNan\nCounty\nNan\n21311\nPOLYGON ((112.3232 29.46074…\n\n\nYiyang\n21176\nYuanjiang\nCounty City\nYuanjiang\n26258\nPOLYGON ((112.4391 29.1791,…\n\n\nYongzhou\n21178\nJianghua\nAutonomous County\nJianghua\n15801\nPOLYGON ((111.6461 25.29661…\n\n\nYongzhou\n21180\nLanshan\nCounty\nLanshan\n20088\nPOLYGON ((112.2286 25.61123…\n\n\nYongzhou\n21183\nNingyuan\nCounty\nNingyuan\n12697\nPOLYGON ((112.0715 26.09892…\n\n\nYongzhou\n21185\nShuangpai\nCounty\nShuangpai\n21942\nPOLYGON ((111.8864 26.11957…\n\n\nYongzhou\n21186\nXintian\nCounty\nXintian\n14426\nPOLYGON ((112.2578 26.0796,…\n\n\nYueyang\n21187\nHuarong\nCounty\nHuarong\n30413\nPOLYGON ((112.9242 29.69134…\n\n\nYueyang\n21188\nLinxiang\nCounty City\nLinxiang\n31897\nPOLYGON ((113.5502 29.67418…\n\n\nYueyang\n21189\nMiluo\nCounty City\nMiluo\n42497\nPOLYGON ((112.9902 29.02139…\n\n\nYueyang\n21190\nPingjiang\nCounty\nPingjiang\n17252\nPOLYGON ((113.8436 29.06152…\n\n\nYueyang\n21191\nXiangyin\nCounty\nXiangyin\n33983\nPOLYGON ((112.9173 28.98264…\n\n\nZhangjiajie\n21194\nCili\nCounty\nCili\n18714\nPOLYGON ((110.8822 29.69017…\n\n\nZhuzhou\n21197\nChaling\nCounty\nChaling\n20078\nPOLYGON ((113.7666 27.10573…\n\n\nZhuzhou\n21198\nLiling\nCounty City\nLiling\n41491\nPOLYGON ((113.5673 27.94346…\n\n\nZhuzhou\n21199\nYanling\nCounty\nYanling\n21021\nPOLYGON ((113.9292 26.6154,…\n\n\nZhuzhou\n21200\nYou\nCounty\nYou\n36264\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n21201\nZhuzhou\nDistrict\nZhuzhou\n27589\nPOLYGON ((113.2493 28.02411…\n\n\nZhangjiajie\n21196\nSangzhi\nCounty\nSangzhi\n14624\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n21192\nYueyang\nDistrict\nYueyang\n26360\nPOLYGON ((113.343 29.61064,…\n\n\nYongzhou\n21184\nQiyang\nCounty\nQiyang\n20638\nPOLYGON ((111.5563 26.81318…\n\n\nYiyang\n21173\nTaojiang\nCounty\nTaojiang\n19509\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n21153\nShaoyang\nCounty City\nShaoyang\n9653\nPOLYGON ((111.5013 27.30207…\n\n\nLoudi\n21144\nLianyuan\nCounty City\nLianyuan\n18346\nPOLYGON ((111.6789 28.02946…\n\n\nHuaihua\n21132\nHongjiang\nDistrict\nHongjiang\n17733\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21127\nHengyang\nCounty City\nHengyang\n19382\nPOLYGON ((112.7144 26.98613…\n\n\nChenzhou\n21116\nGuiyang\nCounty\nGuiyang\n32853\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n21107\nChangsha\nDistrict\nChangsha\n88656\nPOLYGON ((112.9421 28.03722…\n\n\nChangde\n21105\nTaoyuan\nCounty\nTaoyuan\n22879\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n21160\nXiangtan\nCounty City\nXiangtan\n27060\nPOLYGON ((113.0426 27.8942,…\n\n\nYongzhou\n21177\nDao\nCounty\nDao\n18059\nPOLYGON ((111.498 25.81679,…\n\n\nYongzhou\n21179\nJiangyong\nCounty\nJiangyong\n17168\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n\nNow we create a basemap and chloropleth to look at GDPPC values for 2023\nNote the difference in scales!\n\n\n\nshow code\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#calculating-global-spatial-autocorrelation",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#calculating-global-spatial-autocorrelation",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.4 Calculating Global Spatial Autocorrelation",
    "text": "2.4 Calculating Global Spatial Autocorrelation\n\nCreate QUEEN contiguity weight matrix as in Section 1.5, Contiguity Spatial Weights\nCreate row-standardised weight matrix as inSection 1.7.1, Creating row-standardised weight matrix\n\nuse of style=\"W\" for equal weights here for example, but Style=\"B\" more robust\n\n\n\n\nshow code\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\n# summary(wm_q)\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#m-morans-i-test",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#m-morans-i-test",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.4 “M”: Moran’s I test",
    "text": "2.4 “M”: Moran’s I test\n\nMoran's I evaluates spatial autocorrelation and returns whether pattern is clustered, dispersed, or random (i.e. no autocorrelation)\n\n\n\nshow code\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the output above?\n\n\n\n\nMoran’s I Statistic: of ~0.3 indicates weak spatial correlation\n\n(+) means similar values are closer (e.g. high with high); (-) means dissimilar values cluster (e.g. high with low)\nCloser to 0 means random, closer to 1 or -1 indicates strong correlation\nExpected value is -1/(N-1), i.e. -1/87 here, which is close enough to 0 for estimation\n\nalternative: greater: Suggests that the alternative hypothesis is true, that GDPPC value has is spatially correlated (e.g. neighbouring regions affect value)\n\nnull hypothesis is that the GDPPC is randomly distributed in space\n\np-Value: of magnitude 1e-06 suggests confidence/statistical significance of result\n\np value &lt; 0.05 suggests result is not due to random chance\n\n\n\n\n\n2.4.1 “M”: Monte Carlo Moran’s I test\n\nNot sure where the is necessary, but R documentation suggests also using the Monte Carlo version\nMoran's I evaluates spatial autocorrelation and returns whether pattern is clustered, dispersed, or random (i.e. no autocorrelation)\n\neven using a different seed from Prof, values are similar\n\n\n\n\nshow code\nset.seed(42)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the output above?\n\n\n\n\nMoran’s I Statistic: of 0.30075 indicates weak spatial correlation, as before;\n\nalternative: greater: Suggests that the alternative hypothesis is true, that GDPPC value has is spatially correlated (e.g. neighbouring regions affect value)\np-Value: of 0.001 suggests confidence/statistical significance of result; 0.001 probability of observing results like that\nobserved rank according to documentations suggests the observed statistic is ranked 1000th of 1000 simulations, but I am not sure of what this means."
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#visualising-monte-carlo-morans-i-test",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#visualising-monte-carlo-morans-i-test",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.4.4.2 Visualising Monte Carlo Moran’s I test",
    "text": "2.4.4.2 Visualising Monte Carlo Moran’s I test\n\nExtracting key statistics from $res column\n\n\n\nshow code\ncat(\"Printing values from simulation:\")\n\n\nPrinting values from simulation:\n\n\nshow code\ncat(\"\\n&gt;&gt; mean\\t: \", mean(bperm$res[1:999]))\n\n\n\n&gt;&gt; mean :  -0.007182342\n\n\nshow code\ncat(\"\\n&gt;&gt; var\\t: \", var(bperm$res[1:999]))\n\n\n\n&gt;&gt; var  :  0.004295062\n\n\nshow code\ncat(\"\\n&gt;&gt; summary:\\n\")\n\n\n\n&gt;&gt; summary:\n\n\nshow code\nsummary(bperm$res[1:999])\n\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.200131 -0.052501 -0.013190 -0.007182  0.034529  0.228826 \n\n\n\nplotting res column in histogram:\n\n\n\nshow code\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\",\n     main=\"Histogram of Moran's I statistics, 1000 simulations\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\nQuiz: What statistical observation can you draw from the output above?\n\n\n\n\nMonte Carlo results in normal distribution; most values are close to zero or slightly negative – close to expected value\n\nmost values within 0.2; relatively weak spatial correlation\n\nobserved rank The Moran’s I statistic of 0.30075 is ranked 1000/1000 simulations, and the highest statistic obtained\n\n\n\n\n\n\n\n\n\nChallenge: Instead of using Base Graph to plot the values, plot the values by using ggplot2 package.\n\n\n\n\nDoesn’t generate the exact same histogram, but close enough\nNot sure why breaks = 20 for geom_histogram doesn’t work right, have to manually compute data_binwidth instead\n\n\n\n\n\nshow code\nlibrary(ggplot2)\n\n# Create a sample dataset\nset.seed(123)\ndata &lt;- as.data.frame(bperm$res)\ndata_binwidth &lt;- (max(bperm$res) - min(bperm$res)) / 20\n\nggplot(data, aes(x = bperm$res)) +\n  geom_histogram(binwidth = data_binwidth, fill = \"grey\", color = \"black\", alpha = 0.7) +\n  labs(title = \"ggplot2 Histogram Counter-Example\", x = \"Simulated Moran's I\", y = \"Frequency\") + \n  geom_vline(xintercept = 0, color = \"red\", linetype = \"dashed\", size = 1)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#gearys-c-statistics",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#gearys-c-statistics",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.4.5 Geary’s C Statistics",
    "text": "2.4.5 Geary’s C Statistics\n\nGeary's C evaluates spatial autocorrelation at global level;\n\nGeary’s C is inversely related to Moran’s I;\nGeary’s C uses sum of squared distances, less sensitive to linear associations\nMoran’s I uses standardized spatial covariance\n\n\n\n\nshow code\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the output above?\n\n\n\n\nGeary’s C Statistic: of 0.69 suggests spatial correlation, i.e. GDPPC is related to neighbours\n\nGeary’s c &lt; 1 indicates positive spatial autocorrelation, while &gt;1 suggests spatial dispersion (negative auto-correlation)\nalternative hypothesis: Expectation greater than statistic: Suggests that the alternative hypothesis is true, that GDPPC value has is positively spatially correlated (e.g. neighbouring regions affect value)\np-Value: of 0.0001526 suggests confidence/statistical significance of result; very very low probability that result obtained is due to pure chance\n\n\n\n\n\ncorresponding Monte Carlo permutation test for Geary’s C; even with a different seed, the values are similar\n\n\n\nshow code\nset.seed(42)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 2, p-value = 0.002\nalternative hypothesis: greater\n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the output above?\n\n\n\n\nobserved rank The Geary’s C statistic of 0.69072 is ranked 2/1000 simulations, and the second-lowest; i.e. most values are higher.\np-value of 0.002 is still very small, results unlikely to be due to randomness; alternative hypothesis: greater suggests there exists positive auto-correlation"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#visualising-monte-carlo-gearys-c-test",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#visualising-monte-carlo-gearys-c-test",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.4.5.3 Visualising Monte Carlo Geary’s C test",
    "text": "2.4.5.3 Visualising Monte Carlo Geary’s C test\n\nExtracting key statistics from $res column\n\n\n\nshow code\ncat(\"Printing values from Geary's C simulation:\")\n\n\nPrinting values from Geary's C simulation:\n\n\nshow code\ncat(\"\\n&gt;&gt; mean\\t: \", mean(bperm$res[1:999]))\n\n\n\n&gt;&gt; mean :  0.9953715\n\n\nshow code\ncat(\"\\n&gt;&gt; var\\t: \", var(bperm$res[1:999]))\n\n\n\n&gt;&gt; var  :  0.00723939\n\n\nshow code\ncat(\"\\n&gt;&gt; summary:\\n\")\n\n\n\n&gt;&gt; summary:\n\n\nshow code\nsummary(bperm$res[1:999])\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6827  0.9404  0.9960  0.9954  1.0535  1.2888 \n\n\n\nplotting res column in histogram:\n\n\n\nshow code\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Geary's c\",\n     main=\"Histogram of Geary's c statistics, 1000 simulations\")\nabline(v=1, \n       col=\"red\") \n\n\n\n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the output above?\n\n\n\n\nobserved rank The Geary’s C statistic of 0.69072 is ranked 2/1000 simulations, and the second-lowest; i.e. most values are higher.\n\nas before, Monte Carlo simulations seem to generate normal distribution\npositive spatial correlation exists but not strong; mostly near expected value 1.0"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#spatial-correlogram",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#spatial-correlogram",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "2.5 Spatial Correlogram",
    "text": "2.5 Spatial Correlogram\n\n2.5.1 Moran’s I Correlogram\n\n\nshow code\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nprint(MI_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nshow code\nplot(MI_corr)\n\n\n\n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the plot/output above?\n\n\n\n\nCorrelogram At smaller lags (i.e. smaller distance away) there is positive spatial auto-correlation, fading away to randomness/no autocorrelation at intermediate lags, and negative at higher (5-6) lags\nObserving printout, lags at 3 and 4 are not strongly statistically significant, best results at lags 1, 2, 5.\n\n\n\n\n\n2.5.2 Geary’s C Correlogram\n\n\nshow code\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nprint(GC_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nshow code\nplot(GC_corr)\n\n\n\n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the plot/output above?\n\n\n\n\nCorrelogram At smaller lags (i.e. smaller distance away) there is positive spatial auto-correlation, fading away to randomness/no autocorrelation at intermediate lags, and negative at higher (5-6) lags\nObserving printout, lags at 3, 4, 6 are not strongly statistically significant, best results at lags 1, 2, 5.\n\nProbably because few regions are 6-regions away; results probably most accurate for 1- or 2-regions away"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#analytical-question-1",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#analytical-question-1",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "3.1 Analytical Question",
    "text": "3.1 Analytical Question\n\nIdentify if development is equally distributed geographically in Hunan province\nIf NO, then ask: Is there signs of spatial clustering?\nIf YES, then ask: Where is the spatial clustering?"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#import-datasets-1",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#import-datasets-1",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "3.2 Import Datasets",
    "text": "3.2 Import Datasets"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#import-packages-1",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#import-packages-1",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "3.3 Import Packages",
    "text": "3.3 Import Packages\n\nActually, the same datasets are used from above; see Section 1.2 and even [Section 2.1]\n\n/data/geospatial/Hunan.###: This is a geospatial data set in ESRI shapefile format.\n/data/geospatial/Hunan.###: This is a geospatial data set in ESRI shapefile format.\n\nSimilarly, the same packages are used, see Section 1.3\n\nsf, spdep, tmap, tidyverse\n\n\n\n# import can be ignored, loaded from before\n# pacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n# We run here to reload hunan dataframe, remove spatial lag columns added in earlier\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `C:\\1darren\\ISSS624\\Hands-on_Ex02\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\nJoining with `by = join_by(County)`\n\nkable(hunan)\n\n\n\n\n\n\n\n\n\n\n\n\n\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…\n\n\nChangde\n21102\nLi\nCounty\nLi\n24473\nPOLYGON ((111.3731 29.94649…\n\n\nChangde\n21103\nLinli\nCounty\nLinli\n25554\nPOLYGON ((111.6324 29.76288…\n\n\nChangde\n21104\nShimen\nCounty\nShimen\n27137\nPOLYGON ((110.8825 30.11675…\n\n\nChangsha\n21109\nLiuyang\nCounty City\nLiuyang\n63118\nPOLYGON ((113.9905 28.5682,…\n\n\nChangsha\n21110\nNingxiang\nCounty\nNingxiang\n62202\nPOLYGON ((112.7181 28.38299…\n\n\nChangsha\n21111\nWangcheng\nCounty\nWangcheng\n70666\nPOLYGON ((112.7914 28.52688…\n\n\nChenzhou\n21112\nAnren\nCounty\nAnren\n12761\nPOLYGON ((113.1757 26.82734…\n\n\nChenzhou\n21115\nGuidong\nCounty\nGuidong\n8497\nPOLYGON ((114.1799 26.20117…\n\n\nChenzhou\n21117\nJiahe\nCounty\nJiahe\n32091\nPOLYGON ((112.4425 25.74358…\n\n\nChenzhou\n21118\nLinwu\nCounty\nLinwu\n23986\nPOLYGON ((112.5914 25.55143…\n\n\nChenzhou\n21119\nRucheng\nCounty\nRucheng\n11286\nPOLYGON ((113.6759 25.87578…\n\n\nChenzhou\n21120\nYizhang\nCounty\nYizhang\n17814\nPOLYGON ((113.2621 25.68394…\n\n\nChenzhou\n21121\nYongxing\nCounty\nYongxing\n37651\nPOLYGON ((113.3169 26.41843…\n\n\nChenzhou\n21122\nZixing\nCounty City\nZixing\n65706\nPOLYGON ((113.7311 26.16259…\n\n\nHengyang\n21123\nChangning\nCounty City\nChangning\n24418\nPOLYGON ((112.6144 26.60198…\n\n\nHengyang\n21124\nHengdong\nCounty\nHengdong\n27485\nPOLYGON ((113.1056 27.21007…\n\n\nHengyang\n21125\nHengnan\nCounty\nHengnan\n21911\nPOLYGON ((112.7599 26.98149…\n\n\nHengyang\n21126\nHengshan\nCounty\nHengshan\n25172\nPOLYGON ((112.607 27.4689, …\n\n\nHengyang\n21129\nLeiyang\nCounty\nLeiyang\n26105\nPOLYGON ((112.9996 26.69276…\n\n\nHengyang\n21130\nQidong\nCounty\nQidong\n18001\nPOLYGON ((111.7818 27.0383,…\n\n\nHuaihua\n21131\nChenxi\nCounty\nChenxi\n17026\nPOLYGON ((110.2624 28.21778…\n\n\nHuaihua\n21134\nZhongfang\nCounty\nZhongfang\n30846\nPOLYGON ((109.9431 27.72858…\n\n\nHuaihua\n21135\nHuitong\nCounty\nHuitong\n14334\nPOLYGON ((109.9419 27.10512…\n\n\nHuaihua\n21136\nJingzhou\nCounty\nJingzhou\n20348\nPOLYGON ((109.8186 26.75842…\n\n\nHuaihua\n21137\nMayang\nAutonomous County\nMayang\n13744\nPOLYGON ((109.795 27.98008,…\n\n\nHuaihua\n21138\nTongdao\nAutonomous County\nTongdao\n12781\nPOLYGON ((109.9294 26.46561…\n\n\nHuaihua\n21139\nXinhuang\nAutonomous County\nXinhuang\n15412\nPOLYGON ((109.227 27.43733,…\n\n\nHuaihua\n21140\nXupu\nCounty\nXupu\n13863\nPOLYGON ((110.7189 28.30485…\n\n\nHuaihua\n21141\nYuanling\nCounty\nYuanling\n24194\nPOLYGON ((110.9652 28.99895…\n\n\nHuaihua\n21142\nZhijiang\nAutonomous County\nZhijiang\n20518\nPOLYGON ((109.8818 27.60661…\n\n\nLoudi\n21143\nLengshuijiang\nCounty City\nLengshuijiang\n64257\nPOLYGON ((111.5307 27.81472…\n\n\nLoudi\n21146\nShuangfeng\nCounty\nShuangfeng\n17755\nPOLYGON ((112.263 27.70421,…\n\n\nLoudi\n21147\nXinhua\nCounty\nXinhua\n13398\nPOLYGON ((111.3345 28.19642…\n\n\nShaoyang\n21148\nChengbu\nAutonomous County\nChengbu\n10132\nPOLYGON ((110.4455 26.69317…\n\n\nYongzhou\n21149\nDongan\nDistrict\nDongan\n20901\nPOLYGON ((111.4531 26.86812…\n\n\nShaoyang\n21150\nDongkou\nCounty\nDongkou\n13240\nPOLYGON ((110.6622 27.37305…\n\n\nShaoyang\n21151\nLonghui\nCounty\nLonghui\n9572\nPOLYGON ((110.985 27.65983,…\n\n\nShaoyang\n21152\nShaodong\nCounty\nShaodong\n25246\nPOLYGON ((111.9054 27.40254…\n\n\nShaoyang\n21155\nSuining\nCounty\nSuining\n16069\nPOLYGON ((110.389 27.10006,…\n\n\nShaoyang\n21156\nWugang\nCounty City\nWugang\n12112\nPOLYGON ((110.9878 27.03345…\n\n\nShaoyang\n21157\nXinning\nCounty\nXinning\n10732\nPOLYGON ((111.0736 26.84627…\n\n\nShaoyang\n21158\nXinshao\nCounty\nXinshao\n11514\nPOLYGON ((111.6013 27.58275…\n\n\nXiangtan\n21159\nShaoshan\nCounty City\nShaoshan\n55570\nPOLYGON ((112.5391 27.97742…\n\n\nXiangtan\n21162\nXiangxiang\nCounty City\nXiangxiang\n29361\nPOLYGON ((112.4549 28.05783…\n\n\nXiangxi Tujia and Miao\n21163\nBaojing\nCounty\nBaojing\n14563\nPOLYGON ((109.7015 28.82844…\n\n\nXiangxi Tujia and Miao\n21164\nFenghuang\nCounty\nFenghuang\n13382\nPOLYGON ((109.5239 28.19206…\n\n\nXiangxi Tujia and Miao\n21165\nGuzhang\nCounty\nGuzhang\n11580\nPOLYGON ((109.8968 28.74034…\n\n\nXiangxi Tujia and Miao\n21166\nHuayuan\nCounty\nHuayuan\n20337\nPOLYGON ((109.5647 28.61712…\n\n\nXiangxi Tujia and Miao\n21167\nJishou\nCounty City\nJishou\n31537\nPOLYGON ((109.8375 28.4696,…\n\n\nXiangxi Tujia and Miao\n21168\nLongshan\nCounty\nLongshan\n9754\nPOLYGON ((109.6337 29.62521…\n\n\nXiangxi Tujia and Miao\n21169\nLuxi\nCounty\nLuxi\n17472\nPOLYGON ((110.1067 28.41835…\n\n\nXiangxi Tujia and Miao\n21170\nYongshun\nCounty\nYongshun\n9590\nPOLYGON ((110.0003 29.29499…\n\n\nYiyang\n21171\nAnhua\nCounty\nAnhua\n14567\nPOLYGON ((111.6034 28.63716…\n\n\nYiyang\n21172\nNan\nCounty\nNan\n21311\nPOLYGON ((112.3232 29.46074…\n\n\nYiyang\n21176\nYuanjiang\nCounty City\nYuanjiang\n26258\nPOLYGON ((112.4391 29.1791,…\n\n\nYongzhou\n21178\nJianghua\nAutonomous County\nJianghua\n15801\nPOLYGON ((111.6461 25.29661…\n\n\nYongzhou\n21180\nLanshan\nCounty\nLanshan\n20088\nPOLYGON ((112.2286 25.61123…\n\n\nYongzhou\n21183\nNingyuan\nCounty\nNingyuan\n12697\nPOLYGON ((112.0715 26.09892…\n\n\nYongzhou\n21185\nShuangpai\nCounty\nShuangpai\n21942\nPOLYGON ((111.8864 26.11957…\n\n\nYongzhou\n21186\nXintian\nCounty\nXintian\n14426\nPOLYGON ((112.2578 26.0796,…\n\n\nYueyang\n21187\nHuarong\nCounty\nHuarong\n30413\nPOLYGON ((112.9242 29.69134…\n\n\nYueyang\n21188\nLinxiang\nCounty City\nLinxiang\n31897\nPOLYGON ((113.5502 29.67418…\n\n\nYueyang\n21189\nMiluo\nCounty City\nMiluo\n42497\nPOLYGON ((112.9902 29.02139…\n\n\nYueyang\n21190\nPingjiang\nCounty\nPingjiang\n17252\nPOLYGON ((113.8436 29.06152…\n\n\nYueyang\n21191\nXiangyin\nCounty\nXiangyin\n33983\nPOLYGON ((112.9173 28.98264…\n\n\nZhangjiajie\n21194\nCili\nCounty\nCili\n18714\nPOLYGON ((110.8822 29.69017…\n\n\nZhuzhou\n21197\nChaling\nCounty\nChaling\n20078\nPOLYGON ((113.7666 27.10573…\n\n\nZhuzhou\n21198\nLiling\nCounty City\nLiling\n41491\nPOLYGON ((113.5673 27.94346…\n\n\nZhuzhou\n21199\nYanling\nCounty\nYanling\n21021\nPOLYGON ((113.9292 26.6154,…\n\n\nZhuzhou\n21200\nYou\nCounty\nYou\n36264\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n21201\nZhuzhou\nDistrict\nZhuzhou\n27589\nPOLYGON ((113.2493 28.02411…\n\n\nZhangjiajie\n21196\nSangzhi\nCounty\nSangzhi\n14624\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n21192\nYueyang\nDistrict\nYueyang\n26360\nPOLYGON ((113.343 29.61064,…\n\n\nYongzhou\n21184\nQiyang\nCounty\nQiyang\n20638\nPOLYGON ((111.5563 26.81318…\n\n\nYiyang\n21173\nTaojiang\nCounty\nTaojiang\n19509\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n21153\nShaoyang\nCounty City\nShaoyang\n9653\nPOLYGON ((111.5013 27.30207…\n\n\nLoudi\n21144\nLianyuan\nCounty City\nLianyuan\n18346\nPOLYGON ((111.6789 28.02946…\n\n\nHuaihua\n21132\nHongjiang\nDistrict\nHongjiang\n17733\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21127\nHengyang\nCounty City\nHengyang\n19382\nPOLYGON ((112.7144 26.98613…\n\n\nChenzhou\n21116\nGuiyang\nCounty\nGuiyang\n32853\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n21107\nChangsha\nDistrict\nChangsha\n88656\nPOLYGON ((112.9421 28.03722…\n\n\nChangde\n21105\nTaoyuan\nCounty\nTaoyuan\n22879\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n21160\nXiangtan\nCounty City\nXiangtan\n27060\nPOLYGON ((113.0426 27.8942,…\n\n\nYongzhou\n21177\nDao\nCounty\nDao\n18059\nPOLYGON ((111.498 25.81679,…\n\n\nYongzhou\n21179\nJiangyong\nCounty\nJiangyong\n17168\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\n(some repeated content truncated)"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#cluster-outlier-analysis",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#cluster-outlier-analysis",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "3.6 Cluster & Outlier Analysis",
    "text": "3.6 Cluster & Outlier Analysis\n\nuse of LISA (Local Indicators of Spatial Association) to detect clusters/outliers from Hunan GDPPC\n\n\n3.6.1 Local Moran’s I\n\n(Global) Moran’s I is performed over the entire dataset, looking for pattern across all the datapoints considered\n\nLocal Moran’s I checks each individual datapoint for spatial correlation to detect individual clusters\n\nlocalmoran() thus identifies a Local Moran’s I score for each of 88 regions\n\n\n\nshow code\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nprint(\"Printing first 6 rows of `localMI`\\n\")\n\n\n[1] \"Printing first 6 rows of `localMI`\\n\"\n\n\nshow code\nhead(localMI)\n\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nPrint coefficient matrix of localMoran (warning: long!)\n\n\n\n\n\n\n\nUsing str() to print adjacency weight matrix\n\n\n\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\n\n\n\n\n3.6.1.1 Mapping Local Moran’s I\n\nfirst we append the output coefficient matrix from localMI to hunan before mapping\n\n\n\nshow code\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\nmax_row &lt;- hunan.localMI[which.max(hunan.localMI$Ii), ]\nprint(\"The region of deepest blue is:\", str(max_row$County))\n\n\n chr \"Changsha\"\n[1] \"The region of deepest blue is:\"\n\n\nshow code\nlocal_moran_stats &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"Local Moran Statistics\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Local Moran Statistics\")\n\nlocal_moran_p &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Greens\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Local Moran's I p-values\")\n\ntmap_arrange(local_moran_stats, \n             local_moran_p, \n             asp=1, \n             ncol=2)\n\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\nOverall, looks like generally weakly positive spatial autocorrelation\nRegion of darkest blue (i.e. most influenced by neighbours) is Changsha, 4.9022 (or Wangcheng, 4.4220)\n\nconfidently so, as p-values of regions are extremely low"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#lisa-cluster-maps",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#lisa-cluster-maps",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "3.7 LISA Cluster Maps",
    "text": "3.7 LISA Cluster Maps\n\nplot significant locations of spatial autocorrelation\n\n\n3.7.1 Moran scatterplot\n\nscatterplot of spatially lag GDPPC (y-axis) against region’s GDPPC (x-axis)\ntop-right quadrant show regions of high GDPPC and high GDPPC-neighbours\n\n\n\nshow code\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")                    \n\n\n\n\n\n\n\n3.7.2 Rescaling scatterplot to centre\n\nR-code is really quite powerful for statistics\nuse of scale for standardisation of values to “centre” the plot\n\n\n\nshow code\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector                  \nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\n3.7.3 Preparing LISA Cluster Map:\n\ncreates a vector called quadrant of length same as localMI (i.e. 88 regions)\ncreates spatially lagged GDPPC and centre by removing mean\nalso centre local moran’s I value around its mean\nset statistical threshold of 0.05\npartition 4 quadrants from low-low to high-high\n\n“5th quadrant” of non-statistically significant regions\n\n\n\n\nshow code\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \nLM_I &lt;- localMI[,1]   \nsignif &lt;- 0.05       \n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4    \nquadrant[localMI[,5]&gt;signif] &lt;- 0"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#now-we-plot-the-map-lisa-cluster-map",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#now-we-plot-the-map-lisa-cluster-map",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "### 3.7.3 Now we plot the map LISA Cluster Map:",
    "text": "### 3.7.3 Now we plot the map LISA Cluster Map:\n\n\nshow code\ngdppc &lt;- qtm(hunan, \"GDPPC\")+\n  tm_layout(main.title = \"Map of GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)  +\n  tm_layout(main.title = \"LISA map by Quadrant\")\n\ntmap_arrange(gdppc, LISAmap, local_moran_stats, \n             local_moran_p, \n             asp=2, ncol=2)\n\n\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette."
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#hotspot-coldspot-area-analysis",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#hotspot-coldspot-area-analysis",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "3.8 HotSpot & ColdSPot Area Analysis",
    "text": "3.8 HotSpot & ColdSPot Area Analysis\n\nHot Spot refers to region with value higher than surrounding; similarly Cold Spot for lower\n\n\n3.8.1 Getis and Ord’s G-Statistics\n\nultimate output wm62_lw is a weight matrix, using 62km as neighbour threshold, as a list of spatial weights\n\nto find centroid, use Section 1.5.1\nto find cut-off distance, use Section 1.6.1\nto computed fixed-distance weight, use Section 1.6.2\n\n\n\n\nshow code\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nshow code\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n3.8.3 Computing adaptive distance weight matrix\n\nuse knn with neighbours=8 (max) to enforce “smoothing of neighbour relationship”\n\nnote below, all 88 regions are “least connected” and “most connected”\n\nuse nb2listw to convert nb object to list of spatial weights\n\nnote binary style i.e.\n\n\n\n\nshow code\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "Hands-on_Ex02/Hands-on_Ex02.html#computing-gi-statistics",
    "href": "Hands-on_Ex02/Hands-on_Ex02.html#computing-gi-statistics",
    "title": "Hands-on Exercise 2: Spatial Weights & Spatial Autocorrelation",
    "section": "3.9 Computing Gi statistics",
    "text": "3.9 Computing Gi statistics\n\n3.9.1 Computing Gi statistics with Fixed Distance\n\nUsing wm62_lw from above, creating fixed distance to calculate Z-score for Getis-Ord’s Gi-statistics\n\nZ-score, higher value == greater intensity of clustering\n(+) high clusters, (-) low clusters\n\ncbind back to create hunan.gi SpatialPolygonDataFrame\n\n\n\nshow code\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nmax_row &lt;- hunan.gi[which.max(hunan.gi$gstat_fixed), ]\nprint(\"The region of deepest blue is:\", str(max_row$County))\n\n\n chr \"Wangcheng\"\n[1] \"The region of deepest blue is:\"\n\n\nshow code\nhead(hunan.gi, 5)\n\n\nSimple feature collection with 5 features and 9 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 111.2145 ymin: 28.61762 xmax: 112.3013 ymax: 29.95847\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC      Z.GDPPC lag_GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667 -0.049205949  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981 -0.228341158  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  0.679406172  24143.25\n4 Changde 21102      Li      County      Li 24473  0.004547952  27737.50\n5 Changde 21103   Linli      County   Linli 25554  0.076642204  27270.25\n  gstat_fixed                       geometry\n1  0.43607584 POLYGON ((112.0625 29.75523...\n2 -0.26550565 POLYGON ((112.2288 29.11684...\n3 -0.07303367 POLYGON ((111.8927 29.6013,...\n4  0.41301703 POLYGON ((111.3731 29.94649...\n5  0.27307058 POLYGON ((111.6324 29.76288...\n\n\n\ndraw map:\n\nfrom above, darkest red Local Gi region is Wangcheng\n\n\n\n\nshow code\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi*\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the output above?\n\n\n\n\nWangcheng shows slightly higher Gi* value than Changsha, though both were identified earlier\nsimilar colour palette as quadrant mapping earlier; red regions are high-high, blue regions are low-low\n\noverall, looks like there is some agreement of spatial auto-correlation when analysed like this\n\n\n\n\n\n\n3.9.2 Computing Gi statistics using Adaptive Distance\n\nUsing knn_lw from above with 8 fixed neighours for each region\n\nI guess “adaptive distance” means “whatever distance needed to clock as neighbours”\n\n\n\n\nshow code\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\ncoolwarm &lt;- colorRampPalette(c(\"blue\", \"white\", \"red\"))(10)\n\n\nGimap_adaptive &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=coolwarm, \n          title = \"local Gi, adaptive\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap,\n             Gimap_adaptive,\n             asp=1, \n             ncol=3)\n\n\nSome legend labels were too wide. These labels have been resized to 0.47, 0.47, 0.47, 0.43. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.\n\n\nVariable(s) \"gstat_fixed\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\nVariable(s) \"gstat_adaptive\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\n\n\n\n\n\n\nQuiz: What statistical conclusion can you draw from the output above?\n\n\n\n\nUsing both fixed- and adaptive-distance neigbours generates similar results; values are largely in agreement\nknn=8 feels like it’s not very logical, but maybe there’s not too much difference"
  }
]